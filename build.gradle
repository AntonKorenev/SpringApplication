group 'com.company'
version '1.0-SNAPSHOT'

apply plugin: 'java'
apply plugin: 'idea'
apply plugin: 'war'
apply plugin: 'org.akhikhl.gretty'
apply plugin: 'org.hidetake.ssh'

repositories {
    mavenCentral()
}

buildscript {
    repositories {
        jcenter()
    }
    dependencies {
        classpath 'org.akhikhl.gretty:gretty:+'
        classpath "org.hidetake:gradle-ssh-plugin:1.1.4"
    }
}

dependencies {
    testCompile 'junit:junit:4.12'
    testCompile 'com.mockrunner:mockrunner-servlet:1.1.0'
    testCompile 'org.mockito:mockito-all:1.9.5'

    compile 'commons-logging:commons-logging:1.2'

    compile 'javax.servlet:javax.servlet-api:3.1.0'
    compile 'jstl:jstl:1.2'

    compile 'mysql:mysql-connector-java:5.1.6'

    compile 'org.hibernate:hibernate-core:5.0.4.Final';
    compile 'org.hibernate:hibernate-validator:5.2.2.Final';
    compile 'javax.validation:validation-api:1.0.0.GA';
    compile 'javax.transaction:jta:1.1'

    compile 'org.springframework:spring-webmvc:4.2.2.RELEASE'
    compile 'org.springframework:spring-context:4.2.2.RELEASE'
    compile 'org.springframework:spring-test:4.2.2.RELEASE'
    compile 'org.springframework:spring-core:4.2.2.RELEASE'
    compile 'org.springframework:spring-beans:4.2.2.RELEASE'
    compile 'org.springframework:spring-expression:4.2.2.RELEASE'
    compile 'org.springframework:spring-jdbc:4.2.2.RELEASE'
    compile 'org.springframework:spring-orm:4.2.2.RELEASE'

    compile 'com.thoughtworks.xstream:xstream:1.4.4'
    compile 'com.fasterxml.jackson.core:jackson-databind:2.0.1'
    compile 'org.json:json:20150729'

    runtime group: 'org.springframework', name: 'spring-core', version: '4.2.2.RELEASE'
    runtime 'org.springframework:spring-core:4.2.2.RELEASE',
            'org.springframework:spring-aop:4.2.2.RELEASE'
    runtime(
            [group: 'org.springframework', name: 'spring-core', version: '4.2.2.RELEASE'],
            [group: 'org.springframework', name: 'spring-aop', version: '4.2.2.RELEASE']
    )
}

gretty {
    httpPort = 8080
    contextPath = '/'
    servletContainer = 'jetty9'
}

/**
 * Task runTest runs application tests and form html report in build/report
 * directory.
 */
task runTest(type: Test) {
    description = "Run the app tests"
    testClassesDir = project.sourceSets.test.output.classesDir
    classpath = project.sourceSets.test.runtimeClasspath
}

/**
 * Task showTestReport runs application tests and shows result as a html-page in
 * default system browser (it uses exec commands so that now it's for Windows
 * only).
 */
task showTestReportWindows(type: Exec) { //on windows only:
    doFirst {
        try {
            runTest.execute()
        } catch (Exception gex) {
            gex.printStackTrace();
            println 'Some tests were not passed'
        }
    }
    description = "Open html formated result of testing in browser"
    workingDir './build/reports/tests'
    commandLine 'cmd', '/c', 'start index.html'
}

war.baseName = 'spring-application'

remotes {
    webServer {
        host = '46.101.143.31'
        user = 'root'
        password = 'U9DffUYpvey4vaRLRsRr'
        knownHosts = allowAnyHosts
    }
}

task deploy << {
    ssh.run {
        session(remotes.webServer) {
            execute 'sudo rm -rf /root/gradlessh/build/*'
            put from: 'build', into: 'gradlessh'
            execute 'bash -x /root/gradlessh/build/output/spring_application/start.sh'
        }
    }
}

task prepareWrapper(type: Wrapper) {
    gradleVersion = '2.9'
}