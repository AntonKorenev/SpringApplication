<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:tx="http://www.springframework.org/schema/tx"
       xsi:schemaLocation="http://www.springframework.org/schema/beans
    http://www.springframework.org/schema/beans/spring-beans-3.0.xsd">

    <bean id= "mapperFromJSON"
          class="com.company.spring_application.mapper.MapperFromJSON"
          scope="prototype">
        <constructor-arg ref="processor"/>
    </bean>


    <!-- MapperFromCSV bean -->
    <bean id = "mapperFromCSV"
          class="com.company.spring_application.mapper.MapperFromCSV"
          scope="prototype">
        <constructor-arg ref="processor"/>
    </bean>


    <!-- Processor bean -->
    <bean id="processor"
          class="com.company.spring_application.processor.Processor"
          scope="singleton">

        <!-- Constructor injection references -->
        <constructor-arg ref="publisherDashboard"/>
        <constructor-arg ref="publisherDatabase"/>
        <constructor-arg ref="publisherUpstream"/>

        <!-- MapperJSON inner bean -->
        <property name="mapperJSON">
            <bean id="mapperJSON"
                  class="com.company.spring_application.mapper.MapperJSON"
                  scope="prototype">
            </bean>
        </property>

        <!-- MapperXML inner bean -->
        <property name="mapperXML">
            <bean id="mapperXML"
                  class="com.company.spring_application.mapper.MapperXML"
                  scope="prototype">
            </bean>
        </property>
    </bean>

    <!-- PublisherDashboard bean -->
    <bean id="publisherDashboard"
          class="com.company.spring_application.publisher.PublisherDashboard"
          scope="singleton">
    </bean>

    <!-- PublisherDatabase bean -->
    <bean id="publisherDatabase"
          class="com.company.spring_application.publisher.PublisherDatabase"
          scope="singleton">
    </bean>

    <!-- PublisherUpstream bean -->
    <bean id="publisherUpstream"
          class="com.company.spring_application.publisher.PublisherUpstream"
          scope="singleton">
    </bean>

    <bean id="order"
          class="com.company.spring_application.domain.Order"
          scope="prototype">
        <constructor-arg ref="client"/>
        <constructor-arg value="buy"/>
        <constructor-arg>
            <list>
                <ref bean="product"/>
            </list>
        </constructor-arg>
    </bean>

    <bean id="product"
          class="com.company.spring_application.domain.Product"
          scope="prototype">
        <constructor-arg value="7"/>
        <constructor-arg value="1000"/>
        <constructor-arg value="repeater"/>
    </bean>

    <bean id="client"
          class="com.company.spring_application.domain.Client"
          scope="prototype">
        <constructor-arg value="Aki"/>
        <constructor-arg value="Nomi"/>
        <property name="id" value="6"/>
    </bean>

    <!-- Database part -->

    <!-- jdbc template -->
    <bean id="dataSource"
          class="org.springframework.jdbc.datasource.DriverManagerDataSource">
        <property name="driverClassName" value="com.mysql.jdbc.Driver"/>
        <property name="url" value="jdbc:mysql://localhost:3306/spring_application"/>
        <property name="username" value="root"/>
        <property name="password" value="Dyabel1973"/>
    </bean>

    <bean id="jdbcTemplate" class="org.springframework.jdbc.core.JdbcTemplate">
        <property name="dataSource" ref="dataSource"/>
    </bean>

    <bean id="clientDao" class="com.company.spring_application.dao.ClientDAO">
        <property name="jdbcTemplate" ref="jdbcTemplate"/>
    </bean>

    <bean id="productDao" class="com.company.spring_application.dao.ProductDAO">
        <property name="jdbcTemplate" ref="jdbcTemplate"/>
    </bean>

    <bean id="orderDao" class="com.company.spring_application.dao.OrderDAO">
        <property name="jdbcTemplate" ref="jdbcTemplate"/>
        <property name="clientDAO" ref="clientDao"/>
        <property name="productDAO" ref="productDao"/>
    </bean>

    <!-- Hibernate -->
    <bean id="sessionFactory" class="org.springframework.orm.hibernate4.LocalSessionFactoryBean">
        <property name="dataSource" ref="dataSource"/>
        <property name="annotatedClasses">
            <list>
                <value>com.company.spring_application.domain.Client</value>
                <value>com.company.spring_application.domain.Product</value>
                <value>com.company.spring_application.domain.Order</value>
            </list>
        </property>
        <property name="hibernateProperties">
            <props>
                <prop key="hibernate.dialect">org.hibernate.dialect.MySQLDialect</prop>
                <prop key="hibernate.current_session_context_class">thread</prop>
                <prop key="hibernate.show_sql">false</prop>
                <prop key="hibernate.id.new_generator_mappings">false</prop>
            </props>
        </property>
    </bean>

    <bean id="clientHibernateDao" class="com.company.spring_application.hibernate.ClientDAO">
        <property name="sessionFactory" ref="sessionFactory"/>
    </bean>

    <bean id="productHibernateDao" class="com.company.spring_application.hibernate.ProductDAO">
        <property name="sessionFactory" ref="sessionFactory"/>
    </bean>

    <bean id="orderHibernateDao" class="com.company.spring_application.hibernate.OrderDAO">
        <property name="sessionFactory" ref="sessionFactory"/>
    </bean>
</beans>